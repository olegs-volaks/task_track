x-args: &args
  args:
    UID: ${UID:?"Run 'bin/setup' to setup the application"}
    GID: ${GID:?"Run 'bin/setup' to setup the application"}

services:
  app:
    tty: true
    build:
      <<: *args
      context: .
      dockerfile: docker/dev.Dockerfile
    depends_on:
      - db
      - js
      - css
    ports:
      - '3000:3000'
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    links:
      - db
    environment:
      RAILS_ENV: development
      RAILS_MAX_THREADS: 5
      RAILS_DATABASE_NAME: ${RAILS_DATABASE_NAME:?"Run 'bin/setup' to setup the application"}
      RAILS_TEST_DATABASE_NAME: ${RAILS_TEST_DATABASE_NAME:?"Run 'bin/setup' to setup the application"}
      RAILS_DATABASE_USERNAME: ${RAILS_DATABASE_USERNAME:?"Run 'bin/setup' to setup the application"}
      RAILS_DATABASE_PASSWORD: ${RAILS_DATABASE_PASSWORD:?"Run 'bin/setup' to setup the application"}
  db:
    image: postgres:latest
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init_db/sql_dump.sql:/dump/sql_dump.sql
      - ./docker/init_db/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
    environment:
      POSTGRES_DB: ${RAILS_DATABASE_NAME:?"Run 'bin/setup' to setup the application"}
      POSTGRES_USER: ${RAILS_DATABASE_USERNAME:?"Run 'bin/setup' to setup the application"}
      POSTGRES_PASSWORD: ${RAILS_DATABASE_PASSWORD:?"Run 'bin/setup' to setup the application"}
      RAILS_TEST_DATABASE: ${RAILS_TEST_DATABASE_NAME:?"Run 'bin/setup' to setup the application"}
  js:
    command: yarn build --watch=forever
    build:
      <<: *args
      context: .
      dockerfile: docker/assets.Dockerfile
    volumes:
      - .:/node
      - node_modules:/node/node_modules
  css:
    build:
      <<: *args
      context: .
      dockerfile: docker/assets.Dockerfile
    command: yarn legacy_watch:css
    volumes:
      - .:/node
      - node_modules:/node/node_modules
volumes:
  postgres_data:
  node_modules: